/*
	Colors
	#e8e9eb: blueish white;
  #357b70: blue;
	#1420a6: dark blue;
  #357b70: dark teal;
	#fbff29: yellow;
  #9627c2: violet/purple;
  #489c79: teal;
*/

:root {
  --primary-color: #e8e9eb;
  --secondary-color: lightblue;
  --primary-button-color: #357b70;
  --secondary-button-color: #fbff29;
  --link-color: #1420a6;
  --open-link-color: #9627c2;
  --selected-link-color: #489c79;
  --font-weight: 400;
  --font-size: 16px;
}

body {
	background-color: var(--primary-color);
	font-family: 'Oswald', sans-serif;
	font-weight: var(--font-weight);
	font-size: var(--font-size);
	line-height: 1.3;
}

a {
  color: var(--link-color);
}

a:visited {
  /* visited link */
  color: var(--open-link-color);
}

a:hover, a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

a:active {
  /* selected link */
  color: var(--selected-link-color);
}

.button, button {
  /* overwrites browser defaults and resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the background color, font color, and text decoration (underline, etc.) of the button */
  background-color: var(--primary-button-color);
  color: white;
  text-decoration: none;
  /*adds spacing to the button (this will be discussed more in-depth later) */
  padding: 10px;
  border-radius: 3px;
  /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 0.2s;
  transition-property: opacity;
}


button:hover, button:focus, .button__secondary:hover, .button__secondary:focus,
.button:hover, .button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}

.button__secondary {
  background-color: var(--secondary-button-color);
  color: black;
  border: none;
  border-bottom: 2px solid rgba(0, 0, 0, 0.2);
  border-radius: 2px;
}

.navigation-list__item--active {
  text-decoration: none;
}

.profile {
  max-width: 700px;
  margin: 0 auto;
}

.profile__portrait {
  margin-right: 20px;
  float: left;
  width: 250px;
  border-radius: 50%;
}

.page-footer {
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
}

* {
  box-sizing: border-box;
}

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
  background-color: var(--secondary-color);
}

.page-header__item {
  flex: 0 1 200px;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

/* start grid fallback */
.grid__item {
 display: inline-block;
 width: 33%;
}
/* end grid fallback */

@supports (display: grid) {
  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    padding: 10px;
  }

  .grid__item {
    background-color: var(--secondary-color);
    padding: 5px;
    width: 100%; /* Have to reassign width back to 100% if browser supports CSS grid, otherwise the grid__items will stay at 33% */
  }

  .grid__item:last-child {
    grid-column: 3 / 3;
    grid-row: 1 / 3;
  }
}

/* media query for resolution width 0px to 500px */
@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}

/* media query for resolution width 500px to 750px */
@media all and (min-width: 500px) and (max-width: 750px){
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

/* shared media query for resolution width 0px to 500px and 500px to 750px */
@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

@keyframes color-change {
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}

.sun {
  animation: 4s color-change infinite alternate linear;
}

.cloud-front {
  animation: 30s cloud-move infinite alternate linear;
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
